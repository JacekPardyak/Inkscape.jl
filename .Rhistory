Sys.getenv("PATH")
library(sf)
url = "https://en.m.wikipedia.org/wiki/Julia_(programming_language)#/media/File%3AJulia_Programming_Language_Logo.svg"
destfile = "data.svg"
download.file(url, destfile)
library(sf)
url = "https://en.m.wikipedia.org/wiki/Julia_(programming_language)#/media/File%3AJulia_Programming_Language_Logo.svg"
destfile = "data.svg"
download.file(url, destfile)
path = system('inkscape --system-data-directory', intern = TRUE)
library(sf)
url = "https://en.m.wikipedia.org/wiki/Julia_(programming_language)#/media/File%3AJulia_Programming_Language_Logo.svg"
destfile = "data.svg"
download.file(url, destfile)
path = system('inkscape --system-data-directory', intern = TRUE)
library(sf)
url = "https://en.m.wikipedia.org/wiki/Julia_(programming_language)#/media/File%3AJulia_Programming_Language_Logo.svg"
destfile = "data.svg"
download.file(url, destfile)
path = system('inkscape --system-data-directory', intern = TRUE)
system('inkscape --version', intern = TRUE)
system('inkscape --system-data-directory', intern = TRUE)
library(sf)
url = "https://en.m.wikipedia.org/wiki/Julia_(programming_language)#/media/File%3AJulia_Programming_Language_Logo.svg"
destfile = "data.svg"
download.file(url, destfile)
path = system('inkscape --system-data-directory', intern = TRUE)
inkscape_extensions_path = paste(path, "\\extensions", sep = "")
inkscape_python_home  = paste(gsub("\\share\\inkscape", "", path, fixed = T), "\\bin", sep = "")
#inx_extension(input, inkscape_extension_name = "dxf12_outlines.py", ext = ".dxf")
library(sf)
url = "https://en.m.wikipedia.org/wiki/Julia_(programming_language)#/media/File%3AJulia_Programming_Language_Logo.svg"
destfile = "data.svg"
download.file(url, destfile)
path = system('inkscape --system-data-directory', intern = TRUE)
inkscape_extensions_path = paste(path, "\\extensions", sep = "")
inkscape_python_home  = paste(gsub("\\share\\inkscape", "", path, fixed = T), "\\bin", sep = "")
#inx_extension(input, inkscape_extension_name = "dxf12_outlines.py", ext = ".dxf")
output = tempfile("inx_", fileext = ext)
library(sf)
url = "https://en.m.wikipedia.org/wiki/Julia_(programming_language)#/media/File%3AJulia_Programming_Language_Logo.svg"
destfile = "data.svg"
download.file(url, destfile)
path = system('inkscape --system-data-directory', intern = TRUE)
inkscape_extensions_path = paste(path, "\\extensions", sep = "")
inkscape_python_home  = paste(gsub("\\share\\inkscape", "", path, fixed = T), "\\bin", sep = "")
inkscape_extension_name = "dxf12_outlines.py"
ext = ".dxf"
output = tempfile("inx_", fileext = ext)
con  = tempfile(pattern = "inx_", fileext = ".bat")
fmt = '@ECHO OFF
cd %s
python.exe "%s" --output="%s"  "%s"'
text = sprintf(fmt,
inkscape_python_home,
paste(inkscape_extensions_path, inkscape_extension_name, sep = "\\"),
output,
input_file_path)
library(sf)
url = "https://en.m.wikipedia.org/wiki/Julia_(programming_language)#/media/File%3AJulia_Programming_Language_Logo.svg"
input_file_path = "data.svg"
download.file(url, destfile = input_file_path)
path = system('inkscape --system-data-directory', intern = TRUE)
inkscape_extensions_path = paste(path, "\\extensions", sep = "")
inkscape_python_home  = paste(gsub("\\share\\inkscape", "", path, fixed = T), "\\bin", sep = "")
inkscape_extension_name = "dxf12_outlines.py"
ext = ".dxf"
output = tempfile("inx_", fileext = ext)
con  = tempfile(pattern = "inx_", fileext = ".bat")
fmt = '@ECHO OFF
cd %s
python.exe "%s" --output="%s"  "%s"'
text = sprintf(fmt,
inkscape_python_home,
paste(inkscape_extensions_path, inkscape_extension_name, sep = "\\"),
output,
input_file_path)
writeLines(text, con)
system(con)
output
library(sf)
url = "https://en.m.wikipedia.org/wiki/Julia_(programming_language)#/media/File%3AJulia_Programming_Language_Logo.svg"
input_file_path = "data.svg"
download.file(url, destfile = input_file_path)
path = system('inkscape --system-data-directory', intern = TRUE)
inkscape_extensions_path = paste(path, "\\extensions", sep = "")
inkscape_python_home  = paste(gsub("\\share\\inkscape", "", path, fixed = T), "\\bin", sep = "")
inkscape_extension_name = "dxf12_outlines.py"
ext = ".dxf"
output = tempfile("inx_", fileext = ext)
con  = tempfile(pattern = "inx_", fileext = ".bat")
fmt = '@ECHO OFF
cd %s
python.exe "%s" --output="%s"  "%s"'
text = sprintf(fmt,
inkscape_python_home,
paste(inkscape_extensions_path, inkscape_extension_name, sep = "\\"),
output,
input_file_path)
writeLines(text, con)
system(con)
output
df <- sf::st_read(output)
library(sf)
url = "https://en.m.wikipedia.org/wiki/Julia_(programming_language)#/media/File%3AJulia_Programming_Language_Logo.svg"
input_file_path = "data.svg"
download.file(url, destfile = input_file_path)
path = system('inkscape --system-data-directory', intern = TRUE)
inkscape_extensions_path = paste(path, "\\extensions", sep = "")
inkscape_python_home  = paste(gsub("\\share\\inkscape", "", path, fixed = T), "\\bin", sep = "")
inkscape_extension_name = "dxf12_outlines.py"
ext = ".dxf"
output = tempfile("inx_", fileext = ext)
con  = tempfile(pattern = "inx_", fileext = ".bat")
fmt = '@ECHO OFF
cd %s
python.exe "%s" --output="%s"  "%s"'
text = sprintf(fmt,
inkscape_python_home,
paste(inkscape_extensions_path, inkscape_extension_name, sep = "\\"),
output,
input_file_path)
writeLines(text, con)
system(con)
output
df <- sf::st_read(output)
library(sf)
url = "https://en.m.wikipedia.org/wiki/Julia_(programming_language)#/media/File%3AJulia_Programming_Language_Logo.svg"
input_file_path = "data.svg"
download.file(url, destfile = input_file_path)
path = system('inkscape --system-data-directory', intern = TRUE)
inkscape_extensions_path = paste(path, "\\extensions", sep = "")
inkscape_python_home  = paste(gsub("\\share\\inkscape", "", path, fixed = T), "\\bin", sep = "")
inkscape_extension_name = "dxf12_outlines.py"
ext = ".dxf"
output = tempfile("inx_", fileext = ext)
con  = tempfile(pattern = "inx_", fileext = ".bat")
fmt = '@ECHO OFF
cd %s
python.exe "%s" --output="%s"  "%s"'
text = sprintf(fmt,
inkscape_python_home,
paste(inkscape_extensions_path, inkscape_extension_name, sep = "\\"),
output,
input_file_path)
writeLines(text, con)
system(con)
output
df <- sf::st_read(output)
library(sf)
url = "https://en.m.wikipedia.org/wiki/Julia_(programming_language)#/media/File%3AJulia_Programming_Language_Logo.svg"
input = "data.svg"
download.file(url, destfile = input)
input_file_path = tempfile("inx_")
file.copy(input, input_file_path)
path = system('inkscape --system-data-directory', intern = TRUE)
inkscape_extensions_path = paste(path, "\\extensions", sep = "")
inkscape_python_home  = paste(gsub("\\share\\inkscape", "", path, fixed = T), "\\bin", sep = "")
inkscape_extension_name = "dxf12_outlines.py"
ext = ".dxf"
output = tempfile("inx_", fileext = ext)
con  = tempfile(pattern = "inx_", fileext = ".bat")
fmt = '@ECHO OFF
cd %s
python.exe "%s" --output="%s"  "%s"'
text = sprintf(fmt,
inkscape_python_home,
paste(inkscape_extensions_path, inkscape_extension_name, sep = "\\"),
output,
input_file_path)
writeLines(text, con)
system(con)
output
df <- sf::st_read(output)
library(sf)
url = "https://en.m.wikipedia.org/wiki/Julia_(programming_language)#/media/File%3AJulia_Programming_Language_Logo.svg"
input = "data.svg"
download.file(url, destfile = input)
input_file_path = tempfile("inx_")
file.copy(input, input_file_path)
path = system('inkscape --system-data-directory', intern = TRUE)
inkscape_extensions_path = paste(path, "\\extensions", sep = "")
inkscape_python_home  = paste(gsub("\\share\\inkscape", "", path, fixed = T), "\\bin", sep = "")
inkscape_extension_name = "dxf12_outlines.py"
ext = ".dxf"
output = tempfile("inx_", fileext = ext)
con  = tempfile(pattern = "inx_", fileext = ".bat")
fmt = '@ECHO OFF
cd %s
python.exe "%s" --output="%s"  "%s"'
text = sprintf(fmt,
inkscape_python_home,
paste(inkscape_extensions_path, inkscape_extension_name, sep = "\\"),
output,
input_file_path)
writeLines(text, con)
system(con)
output
df <- sf::st_read(output)
library(sf)
url = "https://upload.wikimedia.org/wikipedia/commons/1/1f/Julia_Programming_Language_Logo.svg"
input = "data.svg"
download.file(url, destfile = input)
input_file_path = tempfile("inx_")
file.copy(input, input_file_path)
path = system('inkscape --system-data-directory', intern = TRUE)
inkscape_extensions_path = paste(path, "\\extensions", sep = "")
inkscape_python_home  = paste(gsub("\\share\\inkscape", "", path, fixed = T), "\\bin", sep = "")
inkscape_extension_name = "dxf12_outlines.py"
ext = ".dxf"
output = tempfile("inx_", fileext = ext)
con  = tempfile(pattern = "inx_", fileext = ".bat")
fmt = '@ECHO OFF
cd %s
python.exe "%s" --output="%s"  "%s"'
text = sprintf(fmt,
inkscape_python_home,
paste(inkscape_extensions_path, inkscape_extension_name, sep = "\\"),
output,
input_file_path)
writeLines(text, con)
system(con)
output
df <- sf::st_read(output)
View(df)
View(df)
library(sf)
url = "https://upload.wikimedia.org/wikipedia/commons/1/1f/Julia_Programming_Language_Logo.svg"
input = "data.svg"
download.file(url, destfile = input)
input_file_path = tempfile("inx_")
file.copy(input, input_file_path)
path = system('inkscape --system-data-directory', intern = TRUE)
inkscape_extensions_path = paste(path, "\\extensions", sep = "")
inkscape_python_home  = paste(gsub("\\share\\inkscape", "", path, fixed = T), "\\bin", sep = "")
inkscape_extension_name = "dxf12_outlines.py"
ext = ".dxf"
output = tempfile("inx_", fileext = ext)
con  = tempfile(pattern = "inx_", fileext = ".bat")
fmt = '@ECHO OFF
cd %s
python.exe "%s" --output="%s"  "%s"'
text = sprintf(fmt,
inkscape_python_home,
paste(inkscape_extensions_path, inkscape_extension_name, sep = "\\"),
output,
input_file_path)
writeLines(text, con)
system(con)
output
df <- sf::st_read(output) %>% select(geometry)
library(sf)
library(dplyr)
url = "https://upload.wikimedia.org/wikipedia/commons/1/1f/Julia_Programming_Language_Logo.svg"
input = "data.svg"
download.file(url, destfile = input)
input_file_path = tempfile("inx_")
file.copy(input, input_file_path)
path = system('inkscape --system-data-directory', intern = TRUE)
inkscape_extensions_path = paste(path, "\\extensions", sep = "")
inkscape_python_home  = paste(gsub("\\share\\inkscape", "", path, fixed = T), "\\bin", sep = "")
inkscape_extension_name = "dxf12_outlines.py"
ext = ".dxf"
output = tempfile("inx_", fileext = ext)
con  = tempfile(pattern = "inx_", fileext = ".bat")
fmt = '@ECHO OFF
cd %s
python.exe "%s" --output="%s"  "%s"'
text = sprintf(fmt,
inkscape_python_home,
paste(inkscape_extensions_path, inkscape_extension_name, sep = "\\"),
output,
input_file_path)
writeLines(text, con)
system(con)
output
df <- sf::st_read(output) %>% select(geometry)
View(df)
library(sf)
library(dplyr)
url = "https://upload.wikimedia.org/wikipedia/commons/1/1f/Julia_Programming_Language_Logo.svg"
input = "data.svg"
download.file(url, destfile = input)
input_file_path = tempfile("inx_")
file.copy(input, input_file_path)
path = system('inkscape --system-data-directory', intern = TRUE)
inkscape_extensions_path = paste(path, "\\extensions", sep = "")
inkscape_python_home  = paste(gsub("\\share\\inkscape", "", path, fixed = T), "\\bin", sep = "")
inkscape_extension_name = "dxf12_outlines.py"
ext = ".dxf"
output = tempfile("inx_", fileext = ext)
con  = tempfile(pattern = "inx_", fileext = ".bat")
fmt = '@ECHO OFF
cd %s
python.exe "%s" --output="%s"  "%s"'
text = sprintf(fmt,
inkscape_python_home,
paste(inkscape_extensions_path, inkscape_extension_name, sep = "\\"),
output,
input_file_path)
writeLines(text, con)
system(con)
output
df <- sf::st_read(output) %>% select(geometry)
df %>% sf::st_write(dsn = "data.geojson", layer = "jl.geojson")
?sf::st_write
install.packages(c("askpass", "credentials", "dplyr", "labeling", "rematch", "rstan", "StanHeaders"))
system("julia --version", intern = TRUE)
library(JuliaCall)
julia <- julia_setup()
julia_command("a = sqrt(2);"); julia_eval("a")
julia_help("sqrt")
?julia_source
julia_source("script.jl")
julia_source("script.jl")
julia_source("script.jl")
julia_source("script.jl")
julia_source("script.jl")
julia_help("GeoDataFrames.write")
library(JuliaCall)
julia <- julia_setup()
julia_command("a = sqrt(2);"); julia_eval("a")
julia_help("GeoDataFrames.write")
julia_command("using GeoDataFrames")
julia_help("GeoDataFrames.write")
