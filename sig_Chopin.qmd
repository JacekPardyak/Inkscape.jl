---
title: "Signature"
format:
  html:
    code-fold: true
---

```{r}
system("julia --version", intern = TRUE)
# to install frm git:
# example in package manager
# add https://github.com/evetion/GeoDataFrames.jl
```


```{julia}
#import Pkg; Pkg.add(["ArchGDAL", "DataFrames", "Pipe", "GeoDataFrames", "Luxor"])
using Plots, ArchGDAL, DataFrames, Pipe, Printf, GeoDataFrames, Luxor

function svg2dxf(url)
  svg = tempname() * ".svg"
  download(url, svg)
  inkscape = "inkscape"
  command = "--system-data-directory"
  path = read(`$inkscape $command`, String)
  path = replace(path, "\n"=>"")
  inkscape_python_home  = replace(path, "\\share\\inkscape"=>"") * "\\bin"
  inkscape_extension_name = "dxf12_outlines.py"
  inkscape_extension_path = path * "\\extensions\\" * inkscape_extension_name 
  dxf = tempname() * ".dxf"
  bat = tempname() * ".bat"
  text = @sprintf "@ECHO OFF \n cd \"%s\" \n python.exe \"%s\" --output=\"%s\" \"%s\"\n" inkscape_python_home inkscape_extension_path dxf svg
  text
  open(bat, "w") do file
    write(bat, text)
  end
  run(`$bat`)
  replace(dxf, "\\"=>"//")
end

function make_poly_n(x, s, e)
  local res =  ArchGDAL.createlinestring()
  for i in s:e
    res = ArchGDAL.union(res, x[i, "geometry"])
  end
  res = ArchGDAL.polygonize(res)
#  res = ArchGDAL.getgeom(res, 0)
  res
end

df = @pipe "https://upload.wikimedia.org/wikipedia/commons/9/91/Chopins_Unterschrift.svg" |>
  svg2dxf(_) |> 
  ArchGDAL.read(_) |>
  ArchGDAL.getlayer(_, 0) |>
  DataFrame(_) |> 
  _.""  |>
  DataFrame(geometry=_)

function make_poly(x)
  res =  ArchGDAL.createlinestring()
  for i in 1:nrow(x)
    res = ArchGDAL.union(res, x[i, "geometry"])
  end
  res = ArchGDAL.polygonize(res)
  vec = []
  for i in 0:(ArchGDAL.ngeom(res) - 1)
    push!(vec, ArchGDAL.getgeom(res, i)) 
  end
  DataFrame(geometry = vec)
end  

@pipe make_poly(df) |> GeoDataFrames.write("sig.shp", _)
```


```{julia}
x = make_poly(df)
x
x[1, :geometry] |> plot
for i in 1:nrow(x)
    p = x[i, :geometry] |> plot!
    display(p)
end
```

```{julia}
using Shapefile, Luxor
include(joinpath(dirname(pathof(Luxor)), "readshapefiles.jl"))

hue = ["#000000", "#0000FF", "#0000FF", "#0000FF", "#0000FF",
       "#0000FF", "#0000FF", "#0000FF", "#0000FF", "#0000FF",
       "#0000FF", "#0000FF", "#0000FF", "#0000FF", "#0000FF",
       "#0000FF", "#0000FF", "#0000FF", "#0000FF", "#0000FF",
       "#0000FF", "#0000FF", "#0000FF", "#0000FF", "#0000FF",
       "#0000FF", "#0000FF", "#0000FF", "#FFFFFF", "#0000FF",
       "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#0000FF",
       "#FFFFFF", "#FFFFFF", "#0000FF", "#FFFFFF", "#000000",
       "#FFFFFF", "#FFFFFF", "#FFFFFF", "#0000FF", "#FFFFFF",
       "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF",
       "#FFFFFF", "#0000FF", "#FFFFFF", "#0000FF", "#FFFFFF",
       "#FFFFFF", "#0000FF", "#0000FF", "#0000FF", "#0000FF",
       "#0000FF", "#0000FF", "#0000FF", "#0000FF", "#0000FF"]
sig = open("sig.shp") do f
    read(f, Shapefile.Handle)
end

function draw_sig(x)
    Drawing(4000, 2000)
    origin(Point(0, 2000))
    scale(25, 25)
    gsave()
    background("#FFFFFF")
    i = 0
    for shape in x.shapes
        pgons, bbox = convert(Array{Luxor.Point, 1}, shape)
        for pgon in pgons
            i = i + 1
            sethue(hue[i])
            poly(pgon, :fill)
        end
    end
    grestore()
    finish()
    preview()
end

draw_sig(sig)

```

```{julia}
g1 = ArchGDAL.createpolygon([(0.,0.), (0.,1.), (1.,1.)])
g2 = ArchGDAL.createpolygon([(0.,1.), (1.,0.), (1.,1.)])

g1 |> plot
g2 |> plot!
#ArchGDAL.difference(g1, g2)
  ArchGDAL.union(g1, g2)
```


```{julia}
g1 = ArchGDAL.createpoint(1.0, 2.0)
g2 = ArchGDAL.createpoint(1.0, 1.0)
g1 |> plot
g2 |> plot!
ArchGDAL.union(g1, g2)
ArchGDAL.difference(g1, g2)

g1 = ArchGDAL.createlinestring([(i,i+1) for i in 1.0:3.0])
g1 = ArchGDAL.createlinearring([(0.,0.), (0.,1.), (1.,1.)])
g2 = ArchGDAL.createlinearring([(0.,1.), (1.,0.), (1.,1.)])
g1 |> plot
g2 |> plot!
ArchGDAL.union(g1, g2) #|> plot
```